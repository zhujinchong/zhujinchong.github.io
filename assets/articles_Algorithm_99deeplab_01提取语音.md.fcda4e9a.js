import{_ as a,o as s,c as e,Q as p}from"./chunks/framework.2516552c.js";const m=JSON.parse('{"title":"提取音频","description":"","frontmatter":{},"headers":[],"relativePath":"articles/Algorithm/99deeplab/01提取语音.md","filePath":"articles/Algorithm/99deeplab/01提取语音.md","lastUpdated":null}'),t={name:"articles/Algorithm/99deeplab/01提取语音.md"},o=p('<h1 id="提取音频" tabindex="-1">提取音频 <a class="header-anchor" href="#提取音频" aria-label="Permalink to &quot;提取音频&quot;">​</a></h1><p>可以使用 ffmpeg 命令行工具提取音频并转换为 wav 格式。例如：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">ffmpeg -i </span><span style="color:#85E89D;">input</span><span style="color:#B392F0;">.mp4</span><span style="color:#E1E4E8;"> -vn -acodec pcm_s16le -ar 44100 -ac 2 </span><span style="color:#85E89D;">output</span><span style="color:#B392F0;">.wav</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">ffmpeg -i </span><span style="color:#22863A;">input</span><span style="color:#6F42C1;">.mp4</span><span style="color:#24292E;"> -vn -acodec pcm_s16le -ar 44100 -ac 2 </span><span style="color:#22863A;">output</span><span style="color:#6F42C1;">.wav</span></span></code></pre></div><p>-i input.mp4 : 指定输入文件</p><p>-vn : 表示不输出视频流</p><p>-acodec pcm_s16le : 表示音频编码方式为 pcm_s16le</p><p>-ar 44100 : 表示采样率为 44100 Hz</p><p>-ac 2 : 表示使用双声道</p><p>output.wav : 输出文件名</p><p>如果输入文件是其他格式，只需将文件名更换为相应格式即可。</p><h1 id="切分视频" tabindex="-1">切分视频 <a class="header-anchor" href="#切分视频" aria-label="Permalink to &quot;切分视频&quot;">​</a></h1><p>切分视频</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">ffmpeg -ss 00:00:00 -t 00:00:30 -i test.mp4 -vcodec copy -acodec copy output.mp4</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">ffmpeg -ss 00:00:00 -t 00:00:30 -i test.mp4 -vcodec copy -acodec copy output.mp4</span></span></code></pre></div>',13),c=[o];function l(n,r,i,d,_,h){return s(),e("div",null,c)}const g=a(t,[["render",l]]);export{m as __pageData,g as default};
