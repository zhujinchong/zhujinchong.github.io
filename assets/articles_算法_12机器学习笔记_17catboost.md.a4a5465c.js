import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.2516552c.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"articles/算法/12机器学习笔记/17catboost.md","filePath":"articles/算法/12机器学习笔记/17catboost.md","lastUpdated":1698165159000}'),p={name:"articles/算法/12机器学习笔记/17catboost.md"},o=l(`<p>参考： <a href="https://www.jianshu.com/p/49ab87122562" target="_blank" rel="noreferrer">https://www.jianshu.com/p/49ab87122562</a></p><p>俄罗斯大兄弟2017年发表： <a href="https://arxiv.org/pdf/1706.09516.pdf" target="_blank" rel="noreferrer">https://arxiv.org/pdf/1706.09516.pdf</a></p><p>catboost三个优点：</p><ol><li>自动处理类别型特征（categorical features)，自动转成数值型+频率等超参数。</li><li>使用了组合类别特征，利用了特征之间的联系。</li><li>基模型是对称树，同时计算leaf-value方式和传统不一样，传统式计算平均数，catboost采用了其方法，能防止模型过拟合。</li></ol><p>库：pip install catboost</p><p>from catboost import CatBoostClassifier</p><p>from catboost import CatBoostRegressor</p><p>通用参数：</p><ul><li><p>learning_rate=0.03</p></li><li><p>iterations=1000</p></li><li><p>max_depth=6</p></li><li><p>reg_lambda：L2正则化系数，默认3，可以是任何正值</p></li><li><p>one_hot_max_size：对于所有具有多个不同值小于或等于给定参数值的特性，使用one-hot编码。</p></li><li><p>loss_function：</p><ul><li>分类：默认&#39;Logloss&#39;, CrossEntropy, Multiclass</li><li>回归：默认&#39;RMSE&#39;, MAE, MAPE</li></ul></li></ul><p>性能参数：</p><ul><li>thread_count: 默认使用所有线程-1</li></ul><p>属性：</p><ul><li>feature_importances_</li><li>best_score_</li></ul><p>fit参数：</p><ul><li>cat_features=None：是类别属性的列</li><li>sample_weights=None：样本权重</li><li>logging_level=None：输出日志</li><li>plot=False：训练过程，是否显示</li><li>eval_set=None：验证集（X, y）</li></ul><p>代码：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> catboost </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> CatBoostClassifier</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> matplotlib.pyplot </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> plt</span></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> sklearn.datasets </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> load_breast_cancer</span></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> sklearn.model_selection </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> train_test_split</span></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> sklearn </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> metrics</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">cancer </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> load_breast_cancer()</span></span>
<span class="line"><span style="color:#E1E4E8;">x </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> cancer.data</span></span>
<span class="line"><span style="color:#E1E4E8;">y </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> cancer.target</span></span>
<span class="line"><span style="color:#E1E4E8;">x_train, x_test, y_train, y_test </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> train_test_split(x, y, </span><span style="color:#FFAB70;">test_size</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0.2</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">random_state</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;"># 指定类别属性列</span></span>
<span class="line"><span style="color:#E1E4E8;">categorical_columns_indices </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> []</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">model </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> CatBoostClassifier(</span><span style="color:#FFAB70;">learning_rate</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0.01</span><span style="color:#E1E4E8;">, </span></span>
<span class="line"><span style="color:#E1E4E8;">                           </span><span style="color:#FFAB70;">n_estimators</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                           </span><span style="color:#FFAB70;">max_depth</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                           </span><span style="color:#FFAB70;">one_hot_max_size</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                           </span><span style="color:#FFAB70;">loss_function</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;Logloss&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                           </span><span style="color:#FFAB70;">eval_metric</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;AUC&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                           </span><span style="color:#FFAB70;">use_best_model</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">True</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                           </span><span style="color:#FFAB70;">silent</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">True</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                           </span><span style="color:#FFAB70;">random_seed</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">100</span></span>
<span class="line"><span style="color:#E1E4E8;">                          )</span></span>
<span class="line"><span style="color:#E1E4E8;">model.fit(x_train, y_train, </span><span style="color:#FFAB70;">cat_features</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">categorical_columns_indices, </span><span style="color:#FFAB70;">eval_set</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">(x_test, y_test), </span><span style="color:#FFAB70;">plot</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">False</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;"># 特征重要性</span></span>
<span class="line"><span style="color:#E1E4E8;">fea_ </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> model.feature_importances_</span></span>
<span class="line"><span style="color:#E1E4E8;">fea_name </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> model.feature_names_</span></span>
<span class="line"><span style="color:#E1E4E8;">plt.figure()</span></span>
<span class="line"><span style="color:#E1E4E8;">plt.barh(fea_name, fea_, </span><span style="color:#FFAB70;">height</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0.5</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">plt.show()</span></span>
<span class="line"><span style="color:#E1E4E8;">y_pre </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> model.predict(x_test)</span></span>
<span class="line"><span style="color:#6A737D;"># y_pre = model.predict_proba(x_test)</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(metrics.roc_auc_score(y_test, y_pre))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> catboost </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> CatBoostClassifier</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> matplotlib.pyplot </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> plt</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> sklearn.datasets </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> load_breast_cancer</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> sklearn.model_selection </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> train_test_split</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> sklearn </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> metrics</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">cancer </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> load_breast_cancer()</span></span>
<span class="line"><span style="color:#24292E;">x </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> cancer.data</span></span>
<span class="line"><span style="color:#24292E;">y </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> cancer.target</span></span>
<span class="line"><span style="color:#24292E;">x_train, x_test, y_train, y_test </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> train_test_split(x, y, </span><span style="color:#E36209;">test_size</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0.2</span><span style="color:#24292E;">, </span><span style="color:#E36209;">random_state</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;"># 指定类别属性列</span></span>
<span class="line"><span style="color:#24292E;">categorical_columns_indices </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> []</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">model </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> CatBoostClassifier(</span><span style="color:#E36209;">learning_rate</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0.01</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">                           </span><span style="color:#E36209;">n_estimators</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                           </span><span style="color:#E36209;">max_depth</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                           </span><span style="color:#E36209;">one_hot_max_size</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                           </span><span style="color:#E36209;">loss_function</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;Logloss&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                           </span><span style="color:#E36209;">eval_metric</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;AUC&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                           </span><span style="color:#E36209;">use_best_model</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                           </span><span style="color:#E36209;">silent</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                           </span><span style="color:#E36209;">random_seed</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">100</span></span>
<span class="line"><span style="color:#24292E;">                          )</span></span>
<span class="line"><span style="color:#24292E;">model.fit(x_train, y_train, </span><span style="color:#E36209;">cat_features</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">categorical_columns_indices, </span><span style="color:#E36209;">eval_set</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">(x_test, y_test), </span><span style="color:#E36209;">plot</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">False</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;"># 特征重要性</span></span>
<span class="line"><span style="color:#24292E;">fea_ </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> model.feature_importances_</span></span>
<span class="line"><span style="color:#24292E;">fea_name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> model.feature_names_</span></span>
<span class="line"><span style="color:#24292E;">plt.figure()</span></span>
<span class="line"><span style="color:#24292E;">plt.barh(fea_name, fea_, </span><span style="color:#E36209;">height</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0.5</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.show()</span></span>
<span class="line"><span style="color:#24292E;">y_pre </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> model.predict(x_test)</span></span>
<span class="line"><span style="color:#6A737D;"># y_pre = model.predict_proba(x_test)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(metrics.roc_auc_score(y_test, y_pre))</span></span></code></pre></div>`,17),e=[o];function t(c,r,y,E,i,_){return a(),n("div",null,e)}const d=s(p,[["render",t]]);export{m as __pageData,d as default};
