import{_ as s,o as a,c as e,Q as n}from"./chunks/framework.2516552c.js";const p="/assets/image-20230711100754735.7e7c736b.png",l="/assets/image-20230711101758584.4ee40451.png",o="/assets/image-20230721091244663.7d77362f.png",t="/assets/image-20230721091519010.d3970915.png",x=JSON.parse('{"title":"Nginx","description":"","frontmatter":{},"headers":[],"relativePath":"articles/Ops/Nginx/01Nginx.md","filePath":"articles/Ops/Nginx/01Nginx.md","lastUpdated":null}'),c={name:"articles/Ops/Nginx/01Nginx.md"},i=n(`<h1 id="nginx" tabindex="-1">Nginx <a class="header-anchor" href="#nginx" aria-label="Permalink to &quot;Nginx&quot;">​</a></h1><h2 id="linux安装" tabindex="-1">Linux安装 <a class="header-anchor" href="#linux安装" aria-label="Permalink to &quot;Linux安装&quot;">​</a></h2><p>1、从官网下载源码</p><p><code>http://nginx.org/en/download.html</code></p><p>2、安装依赖包</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">yum install gcc-c++				# c++编译器				</span></span>
<span class="line"><span style="color:#e1e4e8;">yum install -y pcre pcre-devel	# nginx的http模块需要用pcre解析</span></span>
<span class="line"><span style="color:#e1e4e8;">yum install -y zlib zlib-devel	# 多种压缩和解压方式</span></span>
<span class="line"><span style="color:#e1e4e8;">yum install -y openssl openssl-devel # https是基于SSL协议</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">yum install gcc-c++				# c++编译器				</span></span>
<span class="line"><span style="color:#24292e;">yum install -y pcre pcre-devel	# nginx的http模块需要用pcre解析</span></span>
<span class="line"><span style="color:#24292e;">yum install -y zlib zlib-devel	# 多种压缩和解压方式</span></span>
<span class="line"><span style="color:#24292e;">yum install -y openssl openssl-devel # https是基于SSL协议</span></span></code></pre></div><p>3、解压到 <code>/usr/local/nginx-1.14.0</code></p><p>因为nginx默认安装到 <code>/usr/local/nginx</code> 目录下，所以建议源码安装包放在 <code>/usr/local/nginx-1.14.0</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">tar -xvf nginx-1.14.0.tar.gz -C /usr/local/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">tar -xvf nginx-1.14.0.tar.gz -C /usr/local/</span></span></code></pre></div><p>4、编译和安装（如果有问题，可能是：缺少依赖包、安装目录找不到）</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">cd /usr/local/nginx/nginx-1.14.0</span></span>
<span class="line"><span style="color:#e1e4e8;">./configure</span></span>
<span class="line"><span style="color:#e1e4e8;">make</span></span>
<span class="line"><span style="color:#e1e4e8;">make install</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">cd /usr/local/nginx/nginx-1.14.0</span></span>
<span class="line"><span style="color:#24292e;">./configure</span></span>
<span class="line"><span style="color:#24292e;">make</span></span>
<span class="line"><span style="color:#24292e;">make install</span></span></code></pre></div><p>5、nginx常用命令</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">./sbin/nginx			# 启动</span></span>
<span class="line"><span style="color:#e1e4e8;">./sbin/nginx -s stop	# 关闭</span></span>
<span class="line"><span style="color:#e1e4e8;">./sbin/nginx -s quit	# 关闭</span></span>
<span class="line"><span style="color:#e1e4e8;">./sbin/nginx -s reload  # 刷新配置</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">./sbin/nginx			# 启动</span></span>
<span class="line"><span style="color:#24292e;">./sbin/nginx -s stop	# 关闭</span></span>
<span class="line"><span style="color:#24292e;">./sbin/nginx -s quit	# 关闭</span></span>
<span class="line"><span style="color:#24292e;">./sbin/nginx -s reload  # 刷新配置</span></span></code></pre></div><h2 id="配置文件结构" tabindex="-1">配置文件结构 <a class="header-anchor" href="#配置文件结构" aria-label="Permalink to &quot;配置文件结构&quot;">​</a></h2><p>配置文件位置 <code>conf/nginx.conf</code></p><p>参考：<code>https://www.runoob.com/w3cnote/nginx-setup-intro.html</code></p><h2 id="代理第一个服务-http服务" tabindex="-1">代理第一个服务（http服务） <a class="header-anchor" href="#代理第一个服务-http服务" aria-label="Permalink to &quot;代理第一个服务（http服务）&quot;">​</a></h2><p>1、编辑配置文件 <code>vim conf/nginx.conf</code></p><p>2、重载配置文件 <code>./sbin/nginx -s reload</code></p><p><img src="`+p+'" alt="image-20230711100754735"></p><h2 id="配置支持websocket" tabindex="-1">配置支持websocket <a class="header-anchor" href="#配置支持websocket" aria-label="Permalink to &quot;配置支持websocket&quot;">​</a></h2><p><img src="'+l+`" alt="image-20230711101758584"></p><h1 id="监控nginx中的服务" tabindex="-1">监控Nginx中的服务 <a class="header-anchor" href="#监控nginx中的服务" aria-label="Permalink to &quot;监控Nginx中的服务&quot;">​</a></h1><h2 id="原理" tabindex="-1">原理 <a class="header-anchor" href="#原理" aria-label="Permalink to &quot;原理&quot;">​</a></h2><p>如果你希望你的NGINX监控工具开始消耗指标，你首先需要启用NGINX stub_status模块。一旦你这样做了，NGINX就会暴露出一个指标的URL，然后可以被不同的监控方案所消耗。</p><p>nginx-module-vts：Nginx的监控模块，能够提供JSON格式的数据产出。</p><p>nginx-vts-exporter：依赖于nginx-module-vts，主要用于收集Nginx的监控数据，并给Prometheus提供监控接口，默认端口号9913。</p><p>注：nginx-module-vts 模块从0.1.17+版本之后原生支持 prometheus 数据格式，可跳过 nginx-vts-exporter 的安装。</p><p>prometheus：获取数据；序列化存储；消息告警等等。</p><p>Grafana：展示数据、数据可视化。</p><h2 id="nginx-module-vts" tabindex="-1">nginx-module-vts <a class="header-anchor" href="#nginx-module-vts" aria-label="Permalink to &quot;nginx-module-vts&quot;">​</a></h2><p>下载nginx-module-vts-master.zip</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">unzip nginx-module-vts-master.zip</span></span>
<span class="line"><span style="color:#e1e4e8;">mv nginx-module-vts-master /usr/local/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">unzip nginx-module-vts-master.zip</span></span>
<span class="line"><span style="color:#24292e;">mv nginx-module-vts-master /usr/local/</span></span></code></pre></div><p>带着nginx-module-vts模块，重新安装一遍nginx</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">./configure --add-module=/usr/local/nginx-module-vts-master</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">./configure --add-module=/usr/local/nginx-module-vts-master</span></span></code></pre></div><p>编译</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">make &amp;&amp; make install</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">make &amp;&amp; make install</span></span></code></pre></div><p>查看配置</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">./sbin/nginx -V</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">./sbin/nginx -V</span></span></code></pre></div><p>添加nginx-module-vts模块的配置</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">http {</span></span>
<span class="line"><span style="color:#e1e4e8;">    vhost_traffic_status_zone;	# 流量监控模块</span></span>
<span class="line"><span style="color:#e1e4e8;">    vhost_traffic_status_filter_by_host on;   #开启此功能，会根据不同的server_name进行流量的统计，否则默认会把流量全部计算到第一个上。</span></span>
<span class="line"><span style="color:#e1e4e8;">    vhost_traffic_status_filter_by_uri </span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">    ...</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">    server {</span></span>
<span class="line"><span style="color:#e1e4e8;">    	listen  80;</span></span>
<span class="line"><span style="color:#e1e4e8;">        ...</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">        location /status {</span></span>
<span class="line"><span style="color:#e1e4e8;">            vhost_traffic_status_display;</span></span>
<span class="line"><span style="color:#e1e4e8;">            vhost_traffic_status_display_format html;</span></span>
<span class="line"><span style="color:#e1e4e8;">        }</span></span>
<span class="line"><span style="color:#e1e4e8;">    }</span></span>
<span class="line"><span style="color:#e1e4e8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">http {</span></span>
<span class="line"><span style="color:#24292e;">    vhost_traffic_status_zone;	# 流量监控模块</span></span>
<span class="line"><span style="color:#24292e;">    vhost_traffic_status_filter_by_host on;   #开启此功能，会根据不同的server_name进行流量的统计，否则默认会把流量全部计算到第一个上。</span></span>
<span class="line"><span style="color:#24292e;">    vhost_traffic_status_filter_by_uri </span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">    ...</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">    server {</span></span>
<span class="line"><span style="color:#24292e;">    	listen  80;</span></span>
<span class="line"><span style="color:#24292e;">        ...</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">        location /status {</span></span>
<span class="line"><span style="color:#24292e;">            vhost_traffic_status_display;</span></span>
<span class="line"><span style="color:#24292e;">            vhost_traffic_status_display_format html;</span></span>
<span class="line"><span style="color:#24292e;">        }</span></span>
<span class="line"><span style="color:#24292e;">    }</span></span>
<span class="line"><span style="color:#24292e;">}</span></span></code></pre></div><p>重启</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">./sbin/nginx -s stop</span></span>
<span class="line"><span style="color:#e1e4e8;">./sbin/nginx</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">./sbin/nginx -s stop</span></span>
<span class="line"><span style="color:#24292e;">./sbin/nginx</span></span></code></pre></div><p>前端访问</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">localhost/status</span></span>
<span class="line"><span style="color:#e1e4e8;">localhost/status/format/json		# 这个需要nginx-vts-exporter暴露给prometheus</span></span>
<span class="line"><span style="color:#e1e4e8;">localhost/status/format/prometheus  # 这个可以直接给prometheus</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">localhost/status</span></span>
<span class="line"><span style="color:#24292e;">localhost/status/format/json		# 这个需要nginx-vts-exporter暴露给prometheus</span></span>
<span class="line"><span style="color:#24292e;">localhost/status/format/prometheus  # 这个可以直接给prometheus</span></span></code></pre></div><p>问：既然可以直接给prometheus数据，为什么还要装nginx-vts-exporter</p><p>答：因为Grafana面板需要json配置，开源的配置的数据源是nginx-vts-exporter的比较多</p><h1 id="监听-docker安装" tabindex="-1">监听-docker安装 <a class="header-anchor" href="#监听-docker安装" aria-label="Permalink to &quot;监听-docker安装&quot;">​</a></h1><h2 id="nginx-vts" tabindex="-1">nginx+vts <a class="header-anchor" href="#nginx-vts" aria-label="Permalink to &quot;nginx+vts&quot;">​</a></h2><p>没有用。服务器直接安装的nginx和vts。</p><h2 id="nginx-vts-exporter" tabindex="-1">nginx-vts-exporter <a class="header-anchor" href="#nginx-vts-exporter" aria-label="Permalink to &quot;nginx-vts-exporter&quot;">​</a></h2><p>下载镜像</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">sophos/nginx-vts-exporter:0.10.3</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">sophos/nginx-vts-exporter:0.10.3</span></span></code></pre></div><p>启动</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">docker run  -tid -p 9913:9913 --rm --env NGINX_STATUS=&quot;http://xxxxx/status/format/json&quot; sophos/nginx-vts-exporter</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">docker run  -tid -p 9913:9913 --rm --env NGINX_STATUS=&quot;http://xxxxx/status/format/json&quot; sophos/nginx-vts-exporter</span></span></code></pre></div><p>访问<code>http://localhost:9913/metrics</code>进行确认</p><h2 id="prometheus" tabindex="-1">Prometheus <a class="header-anchor" href="#prometheus" aria-label="Permalink to &quot;Prometheus&quot;">​</a></h2><p>下载镜像</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">docker pull prome/prometheus</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">docker pull prome/prometheus</span></span></code></pre></div><p>启动</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">run</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-d</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--name</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">zjcprom</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">prom/prometheus</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">run</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-d</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--name</span><span style="color:#24292E;"> </span><span style="color:#032F62;">zjcprom</span><span style="color:#24292E;"> </span><span style="color:#032F62;">prom/prometheus</span></span></code></pre></div><p>复制路径</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">docker cp zjcprom:/etc/prometheus/prometheus.yml /usr/local/etc/prometheus/prometheus.yml</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">docker cp zjcprom:/etc/prometheus/prometheus.yml /usr/local/etc/prometheus/prometheus.yml</span></span></code></pre></div><p>修改配置</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">global:</span></span>
<span class="line"><span style="color:#e1e4e8;">  # 拉去间隔，默认1分钟  # 数据存储，默认15天</span></span>
<span class="line"><span style="color:#e1e4e8;">  scrape_intervel: 30s</span></span>
<span class="line"><span style="color:#e1e4e8;">  evalution_intervel: 30s</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">scrape_configs:</span></span>
<span class="line"><span style="color:#e1e4e8;">  # 直接取vts数据 （对应Grafana模板 9785）</span></span>
<span class="line"><span style="color:#e1e4e8;">  - job_name: &quot;PM-vts@nginx&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">    metrics_path: /status/format/prometheus</span></span>
<span class="line"><span style="color:#e1e4e8;">    static_configs:</span></span>
<span class="line"><span style="color:#e1e4e8;">      - targets: [&quot;10.45.150.85:80&quot;]</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">  # 通过nginx-vts-exporter取数据 （对应Grafana模板 2949）</span></span>
<span class="line"><span style="color:#e1e4e8;">  - job_name: &quot;PM-vts-exporter@nginx&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">    static_configs:</span></span>
<span class="line"><span style="color:#e1e4e8;">      - targets: [&quot;10.45.150.85:9913&quot;]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">global:</span></span>
<span class="line"><span style="color:#24292e;">  # 拉去间隔，默认1分钟  # 数据存储，默认15天</span></span>
<span class="line"><span style="color:#24292e;">  scrape_intervel: 30s</span></span>
<span class="line"><span style="color:#24292e;">  evalution_intervel: 30s</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">scrape_configs:</span></span>
<span class="line"><span style="color:#24292e;">  # 直接取vts数据 （对应Grafana模板 9785）</span></span>
<span class="line"><span style="color:#24292e;">  - job_name: &quot;PM-vts@nginx&quot;</span></span>
<span class="line"><span style="color:#24292e;">    metrics_path: /status/format/prometheus</span></span>
<span class="line"><span style="color:#24292e;">    static_configs:</span></span>
<span class="line"><span style="color:#24292e;">      - targets: [&quot;10.45.150.85:80&quot;]</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">  # 通过nginx-vts-exporter取数据 （对应Grafana模板 2949）</span></span>
<span class="line"><span style="color:#24292e;">  - job_name: &quot;PM-vts-exporter@nginx&quot;</span></span>
<span class="line"><span style="color:#24292e;">    static_configs:</span></span>
<span class="line"><span style="color:#24292e;">      - targets: [&quot;10.45.150.85:9913&quot;]</span></span></code></pre></div><p>删除上一个容器，创建新容器</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">docker stop zjcprom</span></span>
<span class="line"><span style="color:#e1e4e8;">docker rm zjcprom</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">docker run -d --name zjcprom -p 9090:9090 -v /usr/local/etc/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml prome/prometheus</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">docker stop zjcprom</span></span>
<span class="line"><span style="color:#24292e;">docker rm zjcprom</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">docker run -d --name zjcprom -p 9090:9090 -v /usr/local/etc/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml prome/prometheus</span></span></code></pre></div><p>测试地址：<code>http://localhost:9090/</code></p><p><img src="`+o+'" alt="image-20230721091244663"></p><h2 id="grafana" tabindex="-1">Grafana <a class="header-anchor" href="#grafana" aria-label="Permalink to &quot;Grafana&quot;">​</a></h2><p>下载镜像</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">docker pull grafana/grafana:8.3.3</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">docker pull grafana/grafana:8.3.3</span></span></code></pre></div><p>启动</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">docker run -d --name=grafana -p 3000:3000 grafana/grafana</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">docker run -d --name=grafana -p 3000:3000 grafana/grafana</span></span></code></pre></div><p>访问<code>http://localhost:3000</code>，默认用户名和密码为admin/admin</p><p>配置：configuration -&gt; Add Data Sources -&gt; prometheus -&gt; 配置prometheus的URL -&gt; 保存</p><p><img src="'+t+'" alt="image-20230721091519010"></p><p>使用模板，配置一个好看的面板。搜grafana dashboard，进入官网找模板。</p><p>我用的是9785 2949这两个 Dashboard。从官网下载一个json配置，在Grafana中导入即可。</p><h1 id="指标与计算方式" tabindex="-1">指标与计算方式 <a class="header-anchor" href="#指标与计算方式" aria-label="Permalink to &quot;指标与计算方式&quot;">​</a></h1><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">https://blog.csdn.net/chuanxincui/article/details/89361689</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">https://blog.csdn.net/chuanxincui/article/details/89361689</span></span></code></pre></div>',81),r=[i];function d(h,u,g,y,m,v){return a(),e("div",null,r)}const k=s(c,[["render",d]]);export{x as __pageData,k as default};
